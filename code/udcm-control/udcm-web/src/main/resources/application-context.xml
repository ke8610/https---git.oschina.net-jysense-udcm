<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" 
	default-autowire="byName"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/task    
   		http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<context:component-scan base-package="org.ericsson" /><!-- 启用自动扫描 -->
	<task:annotation-driven />
	<!-- Enable annotation style of managing transactions -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 配置mybatis相关数据库的操作 -->
	<bean id="mysqldataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${mysql.driver}"/>
		<property name="url" value="${mysql.url}"/>
		<property name="username" value="${mysql.username}"/>
		<property name="password" value="${mysql.password}"/>
		
		<!-- 初始化连接数量 -->
        <property name="initialSize" value="${druid.initialSize}" />
        <!-- 最大并发连接数 -->
        <property name="maxActive" value="${druid.maxActive}" />
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="${druid.maxIdle}" />
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${druid.minIdle}" />
        <!-- 配置获取连接等待超时的时间 -->     
        <property name="maxWait" value="${druid.maxWait}" />
        <!-- 超过时间限制是否回收 -->
        <property name="removeAbandoned" value="${druid.removeAbandoned}" />
        <!-- 超过时间限制多长； -->
        <property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />
        <!-- 用来检测连接是否有效的sql，要求是一个查询语句-->
        <property name="validationQuery" value="${druid.validationQuery}" />
        <!-- 申请连接的时候检测 -->
        <property name="testWhileIdle" value="${druid.testWhileIdle}" />
        <!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
        <property name="testOnBorrow" value="${druid.testOnBorrow}" />
        <!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能  -->
        <property name="testOnReturn" value="${druid.testOnReturn}" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />     
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.maxPoolPreparedStatementPerConnectionSize}" />
        <!--属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：              
                	监控统计用的filter:stat
                	日志用的filter:log4j
              	            防御SQL注入的filter:wall -->
        <property name="filters" value="${druid.filters}" />
	</bean>
	<bean id="mySqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mysqldataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
	</bean>
	<bean id="mySqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="mySqlSessionFactory" />
	</bean>
	<bean id="mySqlBatchSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mysqldataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
	</bean>
	<!-- 配置事务管理器 -->  
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="mysqldataSource" />
    </bean>
    <!-- 定义事务管理器（声明式的事务） -->
<!--     <tx:annotation-driven transaction-manager="txManager"/> -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">  
        <tx:attributes>
            <tx:method name="find*" propagation="SUPPORTS" />  
            <tx:method name="check*" propagation="SUPPORTS" />  
            <tx:method name="validate*" propagation="SUPPORTS" />  
            <tx:method name="insert*" propagation="REQUIRED" />  
            <tx:method name="save*" propagation="REQUIRED" />  
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="process*" propagation="REQUIRED" />
            <tx:method name="do*" propagation="REQUIRED" /> 
            <tx:method name="*" propagation="SUPPORTS" />  
        </tx:attributes>  
    </tx:advice> 
</beans>